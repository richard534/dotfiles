[user]
    name = Richard Taylor
    email = richard_taylor@rapid7.com
[core]
    editor = vim
    excludesfile = ~/.gitignore_global
	pager = diff-so-fancy | less --tabs=4 -RFX
[format]
    pretty = format:%C(auto)%h %d%Creset %s (%Cgreen%ar%Creset) %n%Cgreen%ai%Creset %aN <%aE>%n
[alias]
    lga = log --graph --all # graph - shows what and where commits were merged; --all shows history of all branches, not just HEAD branch;
    lg = log --graph # graph - shows what and where commits were merged
	lga-overview = log --graph --oneline --all --decorate --simplify-by-decoration --pretty='%C(auto)%h %d %s (%Cgreen%ar%Creset)' # very low granularity git log for repo overview
    co = checkout
    cm = commit
    st = status
    diffc = diff --cached
    unstage = reset HEAD --
    last = log -1 HEAD
    visual = !gitk
	rootexec = "!exec "
	oldest-ancestor = !zsh -c 'diff --old-line-format= --new-line-format= <(git rev-list --first-parent \"${1:-master}\") <(git rev-list --first-parent \"${2:-HEAD}\") | head -1' -
	branchdiff = !sh -c \"git diff `git oldest-ancestor`..\"
	branchlog = !sh -c \"git log `git oldest-ancestor`..\"
	roa = !sh -c \"git reset $(git oldest-ancestor)\" # reset to oldest ancestor
	rob = ! "echo $(git rev-parse --abbrev-ref HEAD) | { read test; git reset origin/$test; }" # reset to latest commit on origin/$current-branch
	br  = !sh -c \"git for-each-ref --sort=committerdate refs/heads/ refs/remotes/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))' \" # custom git branch command
	prune-local = !sh -c \"git-prune-local\"
[color]
	ui = auto
    diff = auto
    status = auto
    branch = auto
    interactive = auto
    pager = true
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22
[color "diff"]
	meta = yellow
	frag = magenta bold
	commit = yellow bold
	old = red bold
	new = green bold
	whitespace = red reverse
[init]
	templatedir = ~/.git_template
[commit]
        template = ~/.gitmessage
	verbose = true
[diff]
	tool = vimdiff
[difftool]
	prompt = false
[mergetool "smerge"]
	cmd = smerge mergetool \"$BASE\" \"$LOCAL\" \"$REMOTE\" -o \"$MERGED\"
	trustExitCode = true
[merge]
	tool = smerge
[github]
	user = ritaylor-r7
