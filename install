#!/bin/bash

# Manual steps:
# install you-complete-me ~/.vim/bundle/youcompleteme/install.py

# Update/init all submodules in this repo
git submodule update --init --recursive --remote

########################################

# Check to see if Homebrew is installed -  if not, install it
command -v brew >/dev/null 2>&1 || { echo >&2 "Installing Homebrew Now"; \
/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"; }

# Additional brew taps
brew tap d12frosted/emacs-plus

# Install packages via homebrew
# tmux
if ! brew ls --versions tmux > /dev/null; then
    brew install tmux
fi

# diff-so-fancy
if ! brew ls --versions diff-so-fancy > /dev/null; then
    brew install diff-so-fancy
fi

# ripgrep
if ! brew ls --versions ripgrep > /dev/null; then
    brew install ripgrep
fi

# fzf
# To install useful key bindings and fuzzy completion uncomment && run:
# $(brew --prefix)/opt/fzf/install
if ! brew ls --versions fzf > /dev/null; then
    brew install fzf
fi

# tree
if ! brew ls --versions tree > /dev/null; then
    brew install tree
fi

# ctags (universal c-tags)
if ! brew ls --versions ctags > /dev/null; then
    brew install ctags
fi

# tldr
if ! brew ls --versions tldr > /dev/null; then
    brew install tldr
fi

# reattach-to-user-namespace
if ! brew ls --versions reattach-to-user-namespace > /dev/null; then
    brew install reattach-to-user-namespace
fi

# pipenv
if ! brew ls --versions pipenv  > /dev/null; then
    brew install pipenv
fi

# mysql
if ! brew ls --versions mysql  > /dev/null; then
    brew install mysql
fi

# postgres
if ! brew ls --versions postgres > /dev/null; then
    brew install postgres
fi

# nodejs
if ! brew ls --versions node  > /dev/null; then
    brew install node
fi

# cmake (for vim youcompleteme plugin)
if ! brew ls --versions cmake  > /dev/null; then
    brew install cmake
fi

# vim (macvim depends on)
if ! brew ls --versions vim  > /dev/null; then
    brew install vim
fi

# macvim
if ! brew ls --versions macvim  > /dev/null; then
    brew install macvim
	brew link macvim
fi

# jq
if ! brew ls --versions jq  > /dev/null; then
    brew install jq
fi

# bat
if ! brew ls --versions bat  > /dev/null; then
    brew install bat
fi

# yapf
if ! brew ls --versions yapf  > /dev/null; then
    brew install yapf
fi

# ispell (used as emacs spell checker)
if ! brew ls --versions ispell  > /dev/null; then
    brew install ispell
fi


# moreutils (sponge command etc)
if ! brew ls --versions moreutils  > /dev/null; then
    brew install moreutils
fi

# coreutils
if ! brew ls --versions coreutils  > /dev/null; then
    brew install coreutils
fi


# pgcli
if ! brew ls --versions pgcli  > /dev/null; then
    brew install pgcli
fi

# entr (event notify test runner)
if ! brew ls --versions entr  > /dev/null; then
    brew install entr
fi

# wget (event notify test runner)
if ! brew ls --versions wget  > /dev/null; then
    brew install wget
fi

# emacs (emacs-plus to be specific)
if ! brew ls --versions emacs-plus  > /dev/null; then
    brew install emacs-plus
fi

########################################

# brew casks

# add alternative versions of casks
brew tap homebrew/cask-versions

# java
# brew cask install java # latest
brew cask install java8 # java8

# keepassxc
brew cask install keepassxc

# keycastr
brew cask install keycastr

# sublime-merge
brew cask install sublime-merge

########################################

# python (pip) packages
pip install virtualenv
pip install jedi
pip install flake8

########################################

# npm packages
npm install --global git-open
npm install --global instant-markdown-d
npm install --global jsonlint
npm install --global prettier

########################################

# download oh-my-zsh
git clone https://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh

########################################

# Link dotfiles
# get source directory within which this bash script is located
BASEDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# vim
ln -s ${BASEDIR}/vimrc ~/.vimrc
ln -s ${BASEDIR}/vim/ ~/.vim

# ctags
ln -s ${BASEDIR}/ctags.d ~/.ctags.d

# tmux
ln -s ${BASEDIR}/tmux.conf ~/.tmux.conf

# zsh/oh-my-zsh
echo "# Put secret zsh config here" > ~/zshrc_local
ln -s ${BASEDIR}/zshrc ~/.zshrc
ln -s ${BASEDIR}/git-custom.zsh ~/.oh-my-zsh/custom/git-custom.zsh
ln -s ${BASEDIR}/docker-custom.zsh ~/.oh-my-zsh/custom/docker-custom.zsh
ln -s ${BASEDIR}/ctags-custom.zsh ~/.oh-my-zsh/custom/ctags-custom.zsh
ln -s ${BASEDIR}/misc-custom.zsh ~/.oh-my-zsh/custom/misc-custom.zsh
chsh -s /bin/zsh # set default shell to zsh

# intelij vimrc
ln -s ${BASEDIR}/ideavimrc ~/.ideavimrc

# git
ln -s ${BASEDIR}/gitignore_global ~/.gitignore_global
ln -s ${BASEDIR}/gitconfig ~/.gitconfig
rm -rf ~/.git_template
ln -s ${BASEDIR}/git_template/ ~/.git_template

# psql
ln -s ${BASEDIR}/psqlrc ~/.psqlrc

# flake8 (python linter)
ln -s ${BASEDIR}/flake8 ~/.config/flake8

# yapf (python linter)
mkdir ~/.config/yapf
ln -s ${BASEDIR}/yapf-config ~/.config/yapf/style

# youcompleteme virtualenv utility python script
ln -s ${BASEDIR}/global_extra_conf.py ~/global_extra_conf.py

# emacs
ln -s ${BASEDIR}/emacs ~/.emacs
ln -s ${BASEDIR}/emacs.d/ ~/.emacs.d

# pgcli
mkdir ~/.config/pgcli
ln -s ${BASEDIR}/pgcli-config ~/.config/pgcli/config

